<?php
/**
 * @file
 * Code for the IPWA_base feature.
 */

include_once 'ipwa_base.features.inc';

/**
 * Implements hook_views_pre_render().
 */

// code for rendering icons at place of child taxonomy terms in projekt-map node popup in map
function ipwa_base_views_pre_render(&$view) {

  if ($view->name == 'aktuelles' && $view->current_display == 'page' ||
    $view->name == 'search_list' && $view->current_display == 'page' ||
    $view->name ==   'projekt_map'&& $view->current_display == 'page_1' ) {
    // get view result count
    $view->attachment_before = '<div class="view-result-count">';
    $view->attachment_before .= $view->total_rows . ' ' . t('Treffer');
    $view->attachment_before .= '</div>';
  }



  //for embedding icon in map-popup
  if((isset($view->plugin_name) && $view->name == 'project_single_view')) {
    foreach ($view->result as $result) {
      $parent_ids = array();
      //to get the node  being used...
      $node_id = $result->_entity_properties['search_api_id'];
      //to fetch the node id of the node fetched earlier...
      $node = node_load($node_id);
      //to get taxonomy present in the node...
      foreach ($node->field_themenzuweisung['und'] as $key=>$val) {
        $tid = $node->field_themenzuweisung['und'][$key]['tid'];
        $term = taxonomy_term_load($tid);
        $parent = taxonomy_get_parents($term->tid);
        if (!empty($parent)) {
          foreach ($parent as $pid => $parent_term) {
            //if this term is also child of same parent as previous one,
            // there is no point of showing same icon, in that case remove the term
            if (in_array($parent_term->tid, $parent_ids)) {
              unset($node->field_themenzuweisung['und'][$key]);
            } else {
              $parent_ids[] = $parent_term->tid;
              if (!empty($parent_term->field_bild)) {
                // Show Icon of parent term
                $term->name = file_create_url($parent_term->field_bild['und'][0]['uri']);
              }
            }
          }
        }
        else {
          //for nodes having parent taxonomies selected
          //replacing the name of taxonomy with the url of icon related to it..
          $term->name= file_create_url($term->field_bild['und'][0]['uri']);
        }

      }
    }

  }

    // for embedding icons in map pop-up
  if($view->name == 'projekt_map' && $view->current_display=='page_1')  {
    foreach ($view->result as $key => $result) {
      $parent_ids = array();
      //to get the node  being used...
      $node_id = $result->_entity_properties['search_api_id'];
      //to fetch the node id of the node fetched earlier...
      $node = node_load($node_id);
      $result->_entity_properties['map_term_icon'] = array();
      //to get taxonomy present in the node...
      foreach ($node->field_themenzuweisung['und'] as $key_term => $val) {
        $tid = $node->field_themenzuweisung['und'][$key_term]['tid'];
        $term = taxonomy_term_load($tid);
        $parent = taxonomy_get_parents($tid);

        if (!empty($parent)) {
          foreach ($parent as $pid => $parent_term) {
            //if this term is also child of same parent as previous one,
            // there is no point of showing same icon, in that case remove the term
            if (in_array($parent_term->tid, $parent_ids)) {
              unset($node->field_themenzuweisung['und'][$key_term]);
            } else {
              $parent_ids[] = $parent_term->tid;
              if (!empty($parent_term->field_bild)) {
                // Show Icon of parent term
                $derivative_uri = image_style_path(themen_icon_36x36, $parent_term->field_bild['und'][0]['uri']);
                $term->icon = file_create_url( $derivative_uri);
                $result->_entity_properties['map_term_icon'][] = $term->icon;
              }
            }
          }
        } else {
          //for nodes having parent taxonomies selected
          //replacing the name of taxonomy with the url of icon related to it..
          $derivative_uri = image_style_path(themen_icon_36x36, $term->field_bild['und'][0]['uri']);
          $term->icon = file_create_url( $derivative_uri);
          $result->_entity_properties['map_term_icon'][] = $term->icon;
        }
      }
    }

  }

  //to embed icon in views
  if (($view->name == 'aktuelles' && $view->current_display == 'page') ||
    ($view->name == 'neueste_informationen' && $view->current_display == 'block') ||
    ($view->name == 'event_on_calendar' && $view->current_display == 'block') ||
    ($view->name == 'termin' && ($view->current_display == 'block_2' || $view->current_display == 'page')) ||
    ($view->name == "neueste_digital_projekte") ||
    ($view->name == "alles_zum_thema") || ($view->name == "latest_content_doorpage")) {

    foreach($view->result as $result) {
      $parent_ids = array();
      if (!empty($result->field_field_themenzuweisung)) {
        foreach($result->field_field_themenzuweisung as $key => $val) {
          $icon = array();
          $tid = $val['raw']['tid'];
          $term = taxonomy_term_load($tid);

          //check if there are parent
          $parent = taxonomy_get_parents($tid);

          if (!empty($parent)) {
            foreach($parent as $pid => $parent_term) {
              //if this term is also child of same parent as previous one,
              // there is no point of showing same icon, in that case remove the term
              if (in_array($parent_term->tid, $parent_ids)) {
                unset($result->field_field_themenzuweisung[$key]);
              } else {
                // add parent term id in array
                $parent_ids[] = $parent_term->tid;
                if (!empty($parent_term->field_bild)) {
                  // Show Icon of parent term
                  $icon = $parent_term->field_bild['und'][0];
                }
              }
            }
          } else {
            if (!empty($term->field_bild)) {
              // For main category(1st level), show their uploaded icon
              $icon = $term->field_bild['und'][0];
            }
          }

          if (!empty($icon)) {
            $result->field_field_themenzuweisung[$key]['rendered'] = array(
              '#theme' => 'image_formatter',
              '#item' => $icon,
              '#image_style' => 'themen_icon_36x36',
              '#path' => '',
              '#access' => 1
            );
            $result->field_field_themenzuweisung[$key]['raw'] = $icon;
          }
        }
      }
    }
  }

  //To remove duplicate result from calendar event block view
  if ($view->name == 'event_on_calendar' && $view->current_display == 'block') {
    $temp_array = array();
    $i = 0;
    $key_array = array();
    foreach($view->result as $val) {
      if (!in_array($val->nid, $key_array)) {
        $key_array[$i] = $val->nid;
        $temp_array[$i] = $val;
      }
      $i++;
    }
    $view->result = $temp_array;
    return $view->result = $temp_array;
  }

  //To identify calendar event is single or recurring
  if ($view->name == 'event_calendar' && $view->current_display == 'page_1') {
    foreach ($view->result as $key => $result) {
      if (!empty($result->field_field_event_datum)) {
        $occurence = count($result->_field_data['nid']['entity']->field_event_datum['und']);
        if (($occurence > 1) || (($result->_field_data['nid']['entity']->field_event_datum['und'][0]['value'] != $result->_field_data['nid']['entity']->field_event_datum['und'][0]['value2']))) {
          $result->field_field_event_datum[0]['rendered']['#markup'] = '<div class="date-display-recurring">Recurring</div>';
        }else{
          $result->field_field_event_datum[0]['rendered']['#markup'] = '<div class="date-display-single ">Single</div>';
        }
      }
    }
  }

}

function ipwa_base_form_alter(&$form, &$form_state, $form_id) {
    // for giving a name to submit button related to bitv validation
  if ($form['#id'] == 'views-exposed-form-aktuelles-page') {
    $form['submit']['#name'] = "submit";
    // for filters customization.
    $form['term_node_tid_depth']['#options'][12]->option[1] = $form['term_node_tid_depth_1']['#options'][0]->option[11] =
    $form['term_node_tid_depth_2']['#options'][31]->option[24] = $form['term_node_tid_depth_3']['#options'][23]->option[34] = 'Alle Themen';

    $filters = array('term_node_tid_depth', 'term_node_tid_depth_1', 'term_node_tid_depth_2', 'term_node_tid_depth_3');
    foreach ($filters as $filter) {
      foreach ($form[$filter]['#options'] as $key => $value) {
        if (isset($value->option)) {
          foreach ($value->option as $option_key => $option_value) {
            $fir_character = substr($option_value, 0, 1);
            if ($fir_character == '-') {
              $new_option = substr($option_value, 1);
              $form[$filter]['#options'][$key]->option[$option_key] = $new_option;
            }
          }
        }

      }
    }
  }

if ($form['#id'] == "views-exposed-form-projekt-map-project-map" || $form['#id'] == "views-exposed-form-projekt-map-page-1") {
  $form['search_api_aggregation_2']['#attributes']['placeholder']="Ort oder PLZ eingeben";
}
}


function ipwa_base_block_info() {
  $blocks = array();
  $blocks['footer_block_icons'] = array(
      'info' => t('footer icon links'),
  );
  $blocks['footer_print'] = array (
      'info' =>t('footer print '),
  );
  return $blocks;
}
/**
 * Implements hook_block_view().
 */
function ipwa_base_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'footer_block_icons':
      $block['subject'] ='Gef√∂rdert durch';
      $block['content'] = show_footer_block_icons();
      break;
    case 'footer_print':
      $block['subject'] = '';
      $block['content'] = show_footer_print();
      break;
  }
  return $block;
}
function show_footer_block_icons() {
  global $base_path;
  $output_icons='<div id=footer-icons-images>
                   <div>
                     <img src="'.$base_path.'profiles/ipwa/themes/ipwa/images/EU_Logo.svg" alt="EFRE_Foerderhinweis_deutsch_farbig">
                   </div>
                   <div>
                     <img src="'.$base_path.'profiles/ipwa/themes/ipwa/images/EFRE.NRW.svg" alt="Ziel2NRW_RGB_1809">
                   </div>
                   <div>
                     <img src="'.$base_path.'profiles/ipwa/themes/ipwa/images/NRW.svg" alt="NRW_MWEIMH_RGB">
                   </div>
                 </div>';

  return $output_icons;

}
function show_footer_print() {
  $output_icons ='<div id="footer_print_icon">
    <button id ="page_print">Print this page</button>
     </div>';
  return $output_icons;
}

function ipwa_base_field_group_pre_render_alter(&$element, $group, &$form){
  if(($group->bundle!="doorpage")&&($group->bundle!="webform")) {
    if($group->group_name == "group_page_info"){
      $block1 = block_load("ipwa_base","footer_print");
      $block = block_load("addthis","addthis_block");
      $element['#prefix']='<div class="group-page-info field-group-html-element"><div class="main_content_blocks">'. render(_block_get_renderable_array( _block_render_blocks(array($block1)))).render(_block_get_renderable_array( _block_render_blocks(array($block)))).'</div>';

    }
  }
}

