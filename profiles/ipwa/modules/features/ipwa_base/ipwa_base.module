<?php
/**
 * @file
 * Code for the IPWA_base feature.
 */

include_once 'ipwa_base.features.inc';

/**
 * Implements hook_views_pre_render().
 */
function ipwa_base_views_pre_render(&$view) {

  if ($view->name == 'aktuelles' && $view->current_display == 'page' ||
    $view->name == 'search_list' && $view->current_display == 'page') {
    // get view result count
    $view->attachment_before = '<div class="view-result-count">';
    $view->attachment_before .= $view->total_rows . ' ' . t('Treffer');
    $view->attachment_before .= '</div>';
  }

  if (($view->name == 'aktuelles' && $view->current_display == 'page') ||
    ($view->name == 'neueste_informationen' && $view->current_display == 'block') ||
    ($view->name == 'event_on_calendar' && $view->current_display == 'block') ||
    ($view->name == 'termin' && ($view->current_display == 'block_2' || $view->current_display == 'page')) ||
    ($view->name == "neueste_digital_projekte") ||
    ($view->name == "alles_zum_thema") || ($view->name == "latest_content_doorpage")) {

    foreach($view->result as $result) {
      $parent_ids = array();
      if (!empty($result->field_field_themenzuweisung)) {
        foreach($result->field_field_themenzuweisung as $key => $val) {
          $icon = array();
          $tid = $val['raw']['tid'];
          $term = taxonomy_term_load($tid);

          //check if there are parent
          $parent = taxonomy_get_parents($tid);

          if (!empty($parent)) {
            foreach($parent as $pid => $parent_term) {
              //if this term is also child of same parent as previous one,
              // there is no point of showing same icon, in that case remove the term
              if (in_array($parent_term->tid, $parent_ids)) {
                unset($result->field_field_themenzuweisung[$key]);
              } else {
                // add parent term id in array
                $parent_ids[] = $parent_term->tid;
                if (!empty($parent_term->field_bild)) {
                  // Show Icon of parent term
                  $icon = $parent_term->field_bild['und'][0];
                }
              }
            }
          } else {
            if (!empty($term->field_bild)) {
              // For main category(1st level), show their uploaded icon
              $icon = $term->field_bild['und'][0];
            }
          }

          if (!empty($icon)) {
            $result->field_field_themenzuweisung[$key]['rendered'] = array(
              '#theme' => 'image_formatter',
              '#item' => $icon,
              '#image_style' => 'themen_icon_36x36',
              '#path' => '',
              '#access' => 1
            );
            $result->field_field_themenzuweisung[$key]['raw'] = $icon;
          }
        }
      }
    }
  }

  //To remove duplicate result from calendar event block view
  if ($view->name == 'event_on_calendar' && $view->current_display == 'block') {
    $temp_array = array();
    $i = 0;
    $key_array = array();
    foreach($view->result as $val) {
      if (!in_array($val->nid, $key_array)) {
        $key_array[$i] = $val->nid;
        $temp_array[$i] = $val;
      }
      $i++;
    }
    $view->result = $temp_array;
    return $view->result = $temp_array;
  }

  //To identify calendar event is single or recurring
  if ($view->name == 'event_calendar' && $view->current_display == 'page_1') {
    foreach ($view->result as $key => $result) {
      if (!empty($result->field_field_event_datum)) {
        $occurence = count($result->field_field_event_datum);
        if (($occurence > 1) || (($result->field_field_event_datum[0]['raw']['value'] != $result->field_field_event_datum[0]['raw']['value2']))) {
          $result->field_field_event_datum[0]['rendered']['#markup'] = '<div class="date-display-recurring">Recurring</div>';
        }else{
          $result->field_field_event_datum[0]['rendered']['#markup'] = '<div class="date-display-single ">Single</div>';
        }
      }
    }
  }

}


function ipwa_base_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-aktuelles-page') {
    $form['term_node_tid_depth']['#options'][0]->option[1] = $form['term_node_tid_depth_1']['#options'][11]->option[11] =
    $form['term_node_tid_depth_2']['#options'][22]->option[24] = $form['term_node_tid_depth_3']['#options'][32]->option[34] = 'Alle Themen';

    $filters = array('term_node_tid_depth', 'term_node_tid_depth_1', 'term_node_tid_depth_2', 'term_node_tid_depth_3');
    foreach ($filters as $filter) {
      foreach ($form[$filter]['#options'] as $key => $value) {
        if (isset($value->option)) {
          foreach ($value->option as $option_key => $option_value) {
            $fir_character = substr($option_value, 0, 1);
            if ($fir_character == '-') {
              $new_option = substr($option_value, 1);
              $form[$filter]['#options'][$key]->option[$option_key] = $new_option;
            }
          }
        }

      }
    }
  }
}
function ipwa_base_form_views_exposed_form_alter(&$form, &$form_state, $form_id)
{
  if ($form['#id'] == 'views-exposed-form-projekt-map-project-map') {
    $view = views_get_current_view();
    if (isset($view->exposed_input['type'])) {
//      $form['#info']['filter-field_akteurstyp']['label'] = ' ';
//      $form['field_akteurstyp']['#access'] = FALSE;

    }
  }
}

