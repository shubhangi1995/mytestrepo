<?php
/**
 * @file
 * Code for the IPWA Search feature.
 */

include_once 'ipwa_search.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ipwa_search_form_views_exposed_form_alter(&$form, $form_state, $form_id) {
  if($form['#id'] == 'views-exposed-form-search-list-page') {
    $form['search_api_views_fulltext']['#attributes']['placeholder'] = t('Suchbegriff eingeben');
    $form['field_ort']['#attributes']['placeholder'] = t('PLZ oder Ort eingeben');
  }
}

/**
 * Implements hook_block_info().
 */
function ipwa_search_block_info() {
  $blocks['search_block'] = array(
    'info' => t('Search Block'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ipwa_search_block_view($delta = '') {
  $block = '';
  switch ($delta) {
    case 'search_block':
      $content = drupal_get_form('ipwa_search_block_form');
      $block['content'] = drupal_render($content);
      break;
  }
  return $block;
}

/**
 * Implements hook_block_form().
 */
function ipwa_search_block_form($form, &$form_state) {
  global $base_url;
  $param = drupal_get_query_parameters();
  $default_value = !empty($param['search_api_views_fulltext']) ? $param['search_api_views_fulltext'] : '';
  $form['search_text'] = array(
    '#title' => 'Suche',
    '#type' => 'textfield',
    '#required' => False,
    '#default_value' => $default_value,
    '#attributes' => array('placeholder'=> 'Suchbegriff eingeben'),
  );

  $form['search_close'] = array(
    '#type' => 'markup',
    '#markup' => '<div class="cross-link" > <a href="">Schliessen</a></div>'
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );
  $form['#action'] = $base_url. '/suche';
  $form['#submit'][] = 'ipwa_search_custom_form_submit';
  return $form;
}

/**
 * Implements hook_form_submit().
 */
function ipwa_search_custom_form_submit($form, &$form_state){
  global $base_url;
  $form_state['redirect'] = $base_url . '/suche?search_api_views_fulltext='.$form_state['values']['search_text'];
}

/**
 * Implements hook_views_pre_render().
 */
function ipwa_search_views_pre_render(&$view) {
  if ($view->name == 'search_list' && $view->current_display == 'page') {
    $results = &$view->result;
    $view->style_plugin->render_fields($view->result);
    $i = 0;
    foreach ($results as $key => $result) {
      $result = is_object($result->entity) ? $result->entity : node_load($result->entity);
      if (!empty($result->field_event_datum) && ($result->type == 'termin')) {
        $occurence = count($result->field_event_datum['und']);
        $startDate = date("d.m.Y", strtotime($result->field_event_datum['und'][0]['value']));
        $enddate = date("d.m.Y", strtotime($result->field_event_datum['und'][$occurence - 1]['value2']));
        if($startDate != $enddate){
          if(($occurence > 1)){
            $output = '<div class="date-display-range">	<span class="date-display-start">' . $startDate . '</span> - <span class="date-display-end">' . $enddate . '</span></div>';
          }else {
            $output = '<div class="date-display-range">	<span class="date-display-start">' . $startDate . '</span> - <span class="date-display-end">' . $enddate . '</span></div>';
          }
        }else{
          $output = '<div class="date-display-range">	<span class="date-display-single">'. $startDate .'</span></div>';
        }
        $view->style_plugin->rendered_fields[$i]['field_event_datum'] = $output;
      }
      $i++;
    }
  }
}