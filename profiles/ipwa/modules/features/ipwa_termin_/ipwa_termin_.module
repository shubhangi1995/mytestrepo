<?php
/**
 * @file
 * Code for the IPWA_termin  feature.
 */

include_once 'ipwa_termin_.features.inc';

/**
 * Implementation of hook_views_pre_render
 *
 * @param $view
 *
 */
function ipwa_termin__views_pre_render(&$view) {
  if (($view->name == "termin" && $view->current_display == 'page') ||
    ($view->name == "event_calendar" && $view->current_display == 'page_1') ||
      ($view->name == "alles_zum_thema" && $view->current_display == 'block')) {
    $front_url = drupal_get_normal_path(variable_get('site_frontpage', 'node'));
    $front_nid = explode('/', $front_url);
    $front_nid = end($front_nid);
    $node = node_load($front_nid);
    if(isset($node->field_anzuzeigende_seitenmodule) && !empty($node->field_anzuzeigende_seitenmodule)) {
      foreach ($node->field_anzuzeigende_seitenmodule['und'] as $pid) {
        $entity_data = entity_load('paragraphs_item', array($pid['value']));
        if(!empty($entity_data)) {
          if($entity_data[$pid['value']]->bundle == 'frontpage_map_teaser_paragraph') {
            $id = $pid['value'];
          }
        }
      }
    }
    if(isset($id)){
      $view->attachment_after = views_embed_view('map_teaser', 'block', $id);
    }
    if($view->name != "event_calendar" && $view->current_display != 'page_1') {
      $view->attachment_before = '<div class="view-result-count">';
      $view->attachment_before .= $view->total_rows . ' ' . t('Treffer');
      $view->attachment_before .= '</div>';
    }
  }
  //For Related content: Kommende Veranstaltungen view
  if ($view->name == 'related_content' ||
    ($view->name == 'latest_content_doorpage' && ($view->current_display == 'block_2' || $view->current_display == 'block_6'))) {
    foreach ($view->result as $key => $result) {
      if (!empty($result->field_field_event_datum['0']['rendered']['#markup'])) {
        // Display '-' instead of 'to' in date field
        if (strpos($result->field_field_event_datum['0']['rendered']['#markup'], 'to') !== false) {
          $view->result[$key]->field_field_event_datum['0']['rendered']['#markup'] = str_replace('to', '-', $result->field_field_event_datum['0']['rendered']['#markup']);
        }
      }
    }
  }

  //For changing output of recurring events in views in format start date- end date
  if (($view->name == 'termin') || ($view->name == 'related_content') || ($view->name == 'event_on_calendar')
    || ($view->name == 'latest_content_doorpage' && ($view->current_display == 'block_2' || $view->current_display == 'block_6' ||  $view->current_display == 'block'))) {
    foreach ($view->result as $key => $result) {
      if (!empty($result->field_field_event_datum)) {
        $occurence = count($result->field_field_event_datum);
        $startDate = date("d.m.Y", strtotime($result->field_field_event_datum[0]['raw']['value']));
        $enddate = date("d.m.Y", strtotime($result->field_field_event_datum[$occurence - 1]['raw']['value2']));
        if (($occurence > 1) || (($result->field_field_event_datum[0]['raw']['value'] != $result->field_field_event_datum[0]['raw']['value2']))) {
          $output = ' ';
          $output = '<div class="date-repeat-rule">' . $output . '</div>';
          $output .= '<div class="date-display-range"><span class="date-display-start">' . $startDate . '</span> - <span class="date-display-end">' . $enddate . '</span></div>';
          $result->field_field_event_datum[0]['rendered']['#markup'] = '<div class="field-event-datum recurring">' . $output . '</div>';
          if (strpos($result->field_field_event_datum['0']['rendered']['#markup'], 'to') !== false) {
            $result->field_field_event_datum['0']['rendered']['#markup'] = str_replace('to', '-', $result->field_field_event_datum['0']['rendered']['#markup']);
          }
          $index = 1;
          while ($occurence > 1) {
            $result->field_field_event_datum[$index]['rendered']['#access'] = 0;
            $index++;
            $occurence--;
          }
        }
      }
    }
  }
}
/**
 * Implements hook_node_view().
 *
 * @params $node
 *
 */
function ipwa_termin__node_view($node, $view_mode, $langcode) {
  // For Recurring event, show in format of start date - end date
  if (!empty($node->content['field_event_datum'])) {
    $occurence = count($node->content['field_event_datum']['#items']);
    $startDate = date("d.m.Y", strtotime($node->content['field_event_datum']['#items'][0]['value']));
    $enddate = date("d.m.Y", strtotime($node->content['field_event_datum']['#items'][$occurence-1]['value2']));
    if ($occurence > 1) {
      // Repeat rule
      $output ='';
      $output = '<div class="date-repeat-rule">' . $output . '</div>';
      $output .= '<div class="date-display-range"><span class="date-display-start">' . $startDate . '</span> to <span class="date-display-end">' . $enddate . '</span></div>';
      $node->content['field_event_datum'][0]['#markup'] = '<div class="field-event-datum recurring">' . $output . '</div>';
    }
  }
}