<?php
/**
 * @file
 * Code for the IPWA_termin  feature.
 */

include_once 'ipwa_termin_.features.inc';

/**
 * Implementation of hook_views_pre_render
 *
 * @param $view
 *
 */
function ipwa_termin__views_pre_render(&$view)
{
    //For Related content: Kommende Veranstaltungen view
    if ($view->name == 'related_content') {
        foreach ($view->result as $key => $result) {
            if (!empty($result->field_field_event_datum['0']['rendered']['#markup'])) {
                // Display '-' instead of 'to' in date field
                if (strpos($result->field_field_event_datum['0']['rendered']['#markup'], 'to') !== false) {
                    $view->result[$key]->field_field_event_datum['0']['rendered']['#markup'] = str_replace('to', '-', $result->field_field_event_datum['0']['rendered']['#markup']);
                }
            }
        }
    }
    if ($view->name == 'termin') {
        foreach ($view->result as $key => $result){
         if(!empty($result->field_field_event_datum)){
           $occurence = count($result->field_field_event_datum);
           $startDate = date("d.m.Y", strtotime($result->field_field_event_datum[0]['raw']['value']));
           $enddate = date("d.m.Y", strtotime($result->field_field_event_datum[$occurence - 1]['raw']['value2']));
           if (($occurence > 1) || ((!empty($result->field_field_event_datum[0]['raw']['rrule'])))) {
             $output =' ';
             $output = '<div class="date-repeat-rule">' . $output . '</div>';
             $output .= '<div class="date-display-range"><span class="date-display-start">' . $startDate . '</span> - <span class="date-display-end">' . $enddate . '</span></div>';
             $result->field_field_event_datum[0]['rendered']['#markup'] = '<div class="field-event-datum recurring">' . $output . '</div>';
             if (strpos($result->field_field_event_datum['0']['rendered']['#markup'], 'to') !== false) {
               $result->field_field_event_datum['0']['rendered']['#markup'] = str_replace('to', '-', $result->field_field_event_datum['0']['rendered']['#markup']);
             }
             $index = 1;
             while ($occurence > 1) {
               $result->field_field_event_datum[$index]['rendered']['#access'] = 0;
               $index++;
               $occurence--;
             }
           }
          }
        }
    }
}




/**
 * Implements hook_node_view().
 *
 * @params $node
 *
 */
function ipwa_termin__node_view($node, $view_mode, $langcode) {
  // For Recurring event, show in format of start date - end date
  if (!empty($node->content['field_event_datum'])) {
    $occurence = count($node->content['field_event_datum']['#items']);
    $startDate = date("d.m.Y", strtotime($node->content['field_event_datum']['#items'][0]['value']));
    $enddate = date("d.m.Y", strtotime($node->content['field_event_datum']['#items'][$occurence-1]['value']));
    if ($occurence > 1) {
      // Repeat rule
      $output =' ';
      $output = '<div class="date-repeat-rule">' . $output . '</div>';
      $output .= '<div class="date-display-range"><span class="date-display-start">' . $startDate . '</span> to <span class="date-display-end">' . $enddate . '</span></div>';
      $node->content['field_event_datum'][0]['#markup'] = '<div class="field-event-datum recurring">' . $output . '</div>';
    }
  }
}